name: Release on Merge to Main

on:
  push:
    branches:
      - main

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get version from manifest
        id: get_version
        run: |
          VERSION=$(grep -o '"version": *"[^"]*"' manifest.json | cut -d'"' -f4)
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "Version found: $VERSION"

      - name: Check if tag exists
        id: check_tag
        run: |
          if git rev-parse "v$VERSION" >/dev/null 2>&1; then
            echo "TAG_EXISTS=true" >> $GITHUB_ENV
            echo "Tag v$VERSION already exists"
          else
            echo "TAG_EXISTS=false" >> $GITHUB_ENV
            echo "Tag v$VERSION does not exist"
          fi

      - name: Create ZIP file
        if: env.TAG_EXISTS == 'false'
        run: |
          mkdir -p build
          zip -r build/BGU.Scout.zip . -x "*.git*" "*.github*" "*.idea*" "*.vscode*" "Screenshots/*" "build/*" "*.DS_Store" "*.md" "icons/*"

      - name: Get commit messages since last release
        if: env.TAG_EXISTS == 'false'
        id: get_changes
        run: |
          LAST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "")
          if [ -z "$LAST_TAG" ]; then
            CHANGES=$(git log --pretty=format:"- %s" | head -n 10)
          else
            CHANGES=$(git log $LAST_TAG..HEAD --pretty=format:"- %s")
          fi
          echo "CHANGES<<EOF" >> $GITHUB_ENV
          echo "$CHANGES" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Create Release
        if: env.TAG_EXISTS == 'false'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ env.VERSION }}
          name: BGU Scout v${{ env.VERSION }}
          body: |
            # BGU Scout v${{ env.VERSION }}

            ## What's Changed
            ${{ env.CHANGES }}

            ## Installation
            1. Download the ZIP file
            2. Extract it to a folder
            3. Open Chrome and go to `chrome://extensions/`
            4. Enable "Developer mode"
            5. Click "Load unpacked" and select the extracted folder
          files: build/BGU.Scout.zip
          draft: false
